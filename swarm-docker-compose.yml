version: '3.7'

networks:
  default:
    driver: overlay

secrets:
  bioatlas.se.crt:
    file: ./nginx-proxy-certs/bioatlas.se.crt
  bioatlas.se.key:
    file: ./nginx-proxy-certs/bioatlas.se.key

configs:
  config_nginx-proxy:
    file: ./nginx-proxy/nginx-proxy.conf
  config_webserver:
    file: ./webserver/app.conf
  config_biocache:
    file: ./config/biocache-config.properties
  config_logger-client:
    file: ./config/logger-client.properties
  config_logger:
    file: ./config/logger-config.properties
  config_ala_hub:
    file: ./config/ala-hub-config.properties
  config_collectory:
    file: ./config/ala-collectory-config.properties
  config_blacklist:
    file: ./config/blacklistMediaUrls.txt
  config_imageservice:
    file: ./config/images-config.properties
  config_apiservice:
    file: ./config/webapi-config.properties
  config_wordpress:
    file: ./wordpress/wp-config-sample.php
  config_specieslist:
    file: ./config/specieslist-webapp-config.properties
  config_bieindex:
    file: ./config/bie-index-config.properties
  config_biehub:
    file: ./config/ala-bie-config.properties
  config_postgis:
    file: ./postgis/pg_hba.conf
  config_layers-service:
    file: ./config/layers-service-config.properties
  config_layers-store:
    file: ./config/layers-store-config.properties
  config_layers-data:
    file: ./config/layers-data.xml
  config_regions:
    file: ./config/regions-config.properties
  config_geonetworkdb:
    file: ./geonetwork/pg_hba.conf
  config_spatial-hub:
    file: ./config/spatial-hub-config.properties
  config_spatial-service:
    file: ./config/spatial-service-config.properties
  config_spatial-service-data:
    file: ./config/spatial-service-data-config.xml
  config_cas:
    file: ./config/cas.properties
  config_userdetails:
    file: ./config/userdetails-config.properties
  config_apikey:
    file: ./config/apikey-config.properties
  config_dashboard:
    file: ./config/dashboard-config.properties

services:

  proxy:
    image: jwilder/nginx-proxy
    init: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    secrets:
      - source: bioatlas.se.crt
        target: /etc/nginx/certs/bioatlas.se.crt
      - source: bioatlas.se.key
        target: /etc/nginx/certs/bioatlas.se.key
    configs:
      - source: config_nginx-proxy
        target: /etc/nginx/conf.d/nginx-proxy.conf
    deploy:
      placement:
        constraints:
          - node.role == manager

  webserver:
    image: nginx:alpine
    environment:
      - VIRTUAL_HOST=beta.bioatlas.se,auth.bioatlas.se
    configs:
      #- ./env/.htpasswd:/etc/nginx/htpasswd
      - source: config_webserver
        target: /etc/nginx/conf.d/app.conf
    deploy:
      placement:
        constraints:
          - node.role == manager

  mysqldb:
    image: mysql:5.7
    env_file: ./env/.envcollectory
    volumes:
      - db_data_collectory:/var/lib/mysql

  cassandradb:
    image: bioatlas/ala-cassandra:v0.3
    volumes:
      - db_data_cassandra:/var/lib/cassandra
    entrypoint: /bin/bash -c "cp /tmp/cassandra.yaml /etc/cassandra/cassandra.yaml && cp /tmp/cassandra-env.sh /etc/cassandra/cassandra-env.sh && /entrypoint-wrap.sh"

  biocacheservice:
    image: bioatlas/ala-biocacheservice:v0.4
    depends_on:
      - cassandradb
      - solr
    environment:
      JAVA_OPTS: -Xmx2g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    volumes:
      - data_nameindex:/data/lucene/namematching
    configs:
      - source: config_biocache
        target: /data/biocache/config/biocache-config.properties
      - source: config_logger-client
        target: /data/logger-client/config/logger-client.properties

  biocachehub:
    image: bioatlas/ala-biocachehub:v0.5
    depends_on:
      - biocacheservice
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    configs:
      - source: config_ala_hub
        target: /data/ala-hub/config/ala-hub-config.properties

  collectory:
    image: bioatlas/ala-collectory:v0.3
    depends_on:
      - mysqldb
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envcollectory
    configs:
      - source: config_collectory
        target: /tmp/ala-collectory-config.properties
    command: /bin/ash -c "envsubst < /tmp/ala-collectory-config.properties > /data/ala-collectory/config/ala-collectory-config.properties && catalina.sh run"

  nameindex:
    #image: bioatlas/ala-nameindex:v0.3
    image: bioatlas/ala-dyntaxaindex:v0.3
    command: /bin/ash
    volumes:
      - data_nameindex:/data/lucene/namematching

  biocachebackend:
    image: bioatlas/ala-biocachebackend:v0.4
    command: /bin/ash
    environment:
      biocache_opts: -Xmx1g -Xms128m
    volumes:
      - data_nameindex:/data/lucene/namematching
      - data_biocachebackend:/data
    configs:
      - source: config_blacklist
        target: /data/biocache/config/blacklistMediaUrls.txt
      - source: config_biocache
        target: /data/biocache/config/biocache-config.properties

  solr:
    image: bioatlas/ala-solr:v0.3
    environment:
      SOLR_HEAP: 4g
    volumes:
      - data_solr:/opt/solr
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - biocache
      - bie
      - bie-offline
    ports:
      - 8983:8983

  loggerservice:
    image: bioatlas/ala-loggerservice:v0.3
    depends_on:
      - mysqldblogger
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envlogger
    configs:
      - source: config_logger
        target: /tmp/logger-config.properties
    command: /bin/ash -c "envsubst < /tmp/logger-config.properties > /data/logger/config/logger-config.properties && catalina.sh run"

  mysqldblogger:
    image: mysql:5.7
    env_file: ./env/.envlogger
    volumes:
      - ./loggerservice/db:/docker-entrypoint-initdb.d
      - db_data_loggerservice:/var/lib/mysql

  imageservice:
    image: bioatlas/ala-imageservice:v0.3
    depends_on:
      - psqldbimage
    environment:
      JAVA_OPTS: -Xmx2g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envimage
    volumes:
      - data_images:/data/images/store
      - data_images_elasticsearch:/data/images/elasticsearch
    configs:
      - source: config_imageservice
        target: /tmp/images-config.properties
    command: /bin/ash -c "envsubst < /tmp/images-config.properties > /data/images/config/images-config.properties && catalina.sh run"

  static:
    image: nginx:alpine
    volumes:
      - ./static:/usr/share/nginx/html
    deploy:
      placement:
        constraints:
          - node.role == manager

  imagestore:
    image: bioatlas/ala-imagestore:v0.3
    volumes:
      - data_images:/data/images/store

  psqldbimage:
    image: postgres:9.6.8-alpine
    env_file: ./env/.envimage
    volumes:
      - db_data_imageservice:/var/lib/postgresql/data

  apiservice:
    image: bioatlas/ala-api:v0.3
    depends_on:
      - mysqldbapi
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envapi
    configs:
      - source: config_apiservice
        target: /tmp/webapi-config.properties
    command: /bin/ash -c "envsubst < /tmp/webapi-config.properties > /data/webapi/config/webapi-config.properties && catalina.sh run"

  mysqldbapi:
    image: mysql:5.7
    env_file: ./env/.envapi
    volumes:
      - db_data_apiservice:/var/lib/mysql

  mysqldbwordpress:
    image: mysql:5.7
    env_file: ./env/.envwordpress
    volumes:
      - db_data_wordpress:/var/lib/mysql

  wordpress:
    image: wordpress:4.9.5-apache
    ports:
      - 8080:80
    env_file: ./env/.envwordpress
    volumes:
      - ./wordpress/themes/atlas/bioatlas-wordpress-theme-master:/var/www/html/wp-content/themes/atlas
      - data_wordpress:/var/www/html
    configs:
      - source: config_wordpress
        target: /usr/src/wordpress/wp-config-sample.php
    deploy:
      placement:
        constraints:
          - node.role == manager

  specieslists:
    image: bioatlas/ala-specieslists:v0.4
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envspecieslists
    configs:
      - source: config_specieslist
        target: /tmp/specieslist-webapp-config.properties
    volumes:
      - data_nameindex:/data/lucene/namematching
    command: /bin/ash -c "envsubst < /tmp/specieslist-webapp-config.properties > /data/specieslist-webapp/config/specieslist-webapp-config.properties && catalina.sh run"

  mysqldbspecieslist:
    image: mysql:5.7
    env_file: ./env/.envspecieslists
    command: --sql_mode=""
    volumes:
      - ./specieslists/db:/docker-entrypoint-initdb.d
      - db_data_specieslists:/var/lib/mysql

  bieindex:
    image: bioatlas/ala-bieindex:v0.5
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    configs:
      - source: config_bieindex
        target: /data/bie-index/config/bie-index-config.properties
    volumes:
      - data_bieindex:/data

  biehub:
    image: bioatlas/ala-biehub:v0.4
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    configs:
      - source: config_biehub
        target: /data/ala-bie/config/ala-bie-config.properties

  postgis:
    image: mdillon/postgis:9.6-alpine
    #image: kartoza/postgis:9.6-2.4
    env_file: ./env/.envpostgis
    volumes:
      - db_data_postgis:/var/lib/postgresql/data
      - ./postgis/layersdb.sql:/docker-entrypoint-initdb.d/layersdb.sql
    configs:
      - source: config_postgis
        target: /etc/postgresql/9.6/main/pg_hba.conf

  geoserver:
    #image: kartoza/geoserver:2.11.2
    image: bioatlas/ala-geoserver:v0.3
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envgeoserver
    volumes:
      - data_geoserver:/data/ala/data/geoserver_data_dir
      - data_spatialservice:/data/spatial-data
    #command: /bin/bash -c "catalina.sh run & (while ! echo exit | nc localhost 8080; do sleep 100; done) && /data/geoserver-files/geoserver.sh"

  layersservice:
    image: bioatlas/ala-layersservice:v0.4
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: env/.envlayersservice
    configs:
      - source: config_layers-service
        target: /data/layers-service/config/layers-service-config.properties
      - source: config_layers-store
        target: /tmp/layers-store-config.properties
      - source: config_layers-data
        target: /tmp/layers-service-data-config.xml
      - source: config_layers-data
        target: /tmp/layers-store-data-config.xml
    volumes:
      - data_layersservice:/data
      - data_spatialservice:/data/spatial-data
    command: /bin/bash -c "envsubst < /tmp/layers-store-config.properties > /data/layers-store/config/layers-store-config.properties && envsubst < /tmp/layers-service-data-config.xml > /data/layers-service/config/layers-service-data-config.xml && envsubst < /tmp/layers-store-data-config.xml > /data/layers-store/config/layers-store-data-config.xml && catalina.sh run"

  layeringestion:
    image: bioatlas/ala-layeringestion:v0.3
    volumes:
      - data_layersservice:/data

  regions:
    image: bioatlas/ala-regions:v0.4
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    configs:
      - source: config_regions
        target: /data/regions/config/regions-config.properties
    volumes:
      - ./regions/regions-files/menu-config.json:/data/regions/config/menu-config.json:ro
      - ./regions/regions-files/state-emblems.json:/data/regions/config/state-emblems.json:ro
      - ./regions/regions-files/stateEmblems.txt:/data/regions/config/stateEmblems.txt:ro

  geonetwork:
    image: geonetwork:3.4.1
    env_file: ./env/.envgeonetwork
    volumes:
      - data_geonetwork:/data/ala/data/geonetwork/
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    depends_on:
      - geonetworkdb

  geonetworkdb:
    image: mdillon/postgis:9.6-alpine
    env_file: ./env/.envgeonetworkdb
    volumes:
      - db_data_geonetworkdb:/var/lib/postgresql/data
    configs:
      - source: config_geonetworkdb
        target: /etc/pg_hba.conf

  spatialhub:
    image: bioatlas/ala-spatialhub:v0.4
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    volumes:
      - data_spatialhub:/data/ala/runtime/files
    configs:
      - source: config_spatial-hub
        target: /data/spatial-hub/config/spatial-hub-config.properties

  spatialservice:
    image: bioatlas/ala-spatialservice:v0.4
    environment:
      - JAVA_OPTS=-Xmx4g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file:
      - ./env/.envspatial
    volumes:
      - data_spatialservice:/data/spatial-data
    configs:
      - source: config_spatial-service
        target: /tmp/spatial-service-config.properties
      - source: config_spatial-service-data
        target: /tmp/spatial-service-data-config.xml
    command: /bin/bash -c "envsubst < /tmp/spatial-service-config.properties > /data/spatial-service/config/spatial-service-config.properties && envsubst < /tmp/spatial-service-data-config.xml > /data/spatial-service/config/spatial-service-data-config.xml && catalina.sh run"

  mysqldbcas:
    image: mysql:5.7
    env_file: ./env/.envcas
    volumes:
      - ./cas2/db:/docker-entrypoint-initdb.d
      - db_data_mysqldbcas:/var/lib/mysql

  casserver:
    image: bioatlas/ala-cas:v0.3
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envcas
    configs:
      - source: config_cas
        target: /tmp/cas.properties
    command: /bin/ash -c "envsubst < /tmp/cas.properties > /data/cas/config/cas.properties && catalina.sh run"

  userdetails:
    image: bioatlas/ala-userdetails:v0.3
    domainname: auth.bioatlas.se
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envcas
    configs:
      - source: config_userdetails
        target: /tmp/userdetails-config.properties
    command: /bin/ash -c "envsubst < /tmp/userdetails-config.properties > /data/userdetails/config/userdetails-config.properties && catalina.sh run"

  mysqldbapikey:
    image: mysql:5.7
    env_file: ./env/.envapikey
    volumes:
      - ./apikey/db:/docker-entrypoint-initdb.d
      - db_data_mysqldbapikey:/var/lib/mysql

  apikey:
    image: bioatlas/ala-apikey:v0.3
    environment:
      - JAVA_OPTS=-Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
    env_file: ./env/.envapikey
    configs:
      - source: config_apikey
        target: /tmp/apikey-config.properties
    command: /bin/ash -c "envsubst < /tmp/apikey-config.properties > /data/apikey/config/apikey-config.properties && catalina.sh run"

#  dashboard:
#    image: bioatlas/ala-dashboard:v0.3
#    environment:
#      JAVA_OPTS: -Xmx1g -Xms128m -XX:MaxPermSize=256m -Xss256k -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
#    configs:
#      - source: config_dashboard
#        target: /data/dashboard/config/dashboard-config.properties
#    volumes:
#      - ./dashboard/data.json:/data/dashboard/data.json:rw

volumes:
  db_data_collectory:
  db_data_cassandra:
  db_data_loggerservice:
  db_data_imageservice:
  db_data_apiservice:
  data_nameindex:
  data_images:
  data_biocachebackend:
  data_solr:
  data_images_elasticsearch:
  db_data_wordpress:
  data_wordpress:
  db_data_specieslists:
  db_data_postgis:
  data_geoserver:
  data_layersservice:
  data_geonetwork:
  db_data_geonetworkdb:
  data_spatialhub:
  data_spatialservice:
  db_data_mysqldbcas:
  db_data_mysqldbapikey:
  data_bieindex:
